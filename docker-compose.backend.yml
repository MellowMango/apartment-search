version: '3.8'

# Backend-only deployment for microservice use
# Use this for production deployments where only the scraping service is needed

services:
  mongodb:
    image: mongo:7
    container_name: lynnapse-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: lynnapse
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - lynnapse-network

  # Backend Microservice - Core scraping and processing only
  lynnapse-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: lynnapse-backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/lynnapse?authSource=admin
      - LYNNAPSE_ENV=production
      - PLAYWRIGHT_HEADLESS=true
      - LYNNAPSE_BACKEND_ONLY=true
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
      - ./data:/app/data
      - ./scrape_results:/app/scrape_results
      - ./cache:/app/cache
    networks:
      - lynnapse-network
    # Keep container running for CLI commands
    stdin_open: true
    tty: true
    command: tail -f /dev/null

volumes:
  mongodb_data:
    driver: local

networks:
  lynnapse-network:
    driver: bridge 