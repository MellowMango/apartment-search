# Crontab configuration for Acquire Apartments backend tasks
# Install with: crontab crontab_config.txt

# Environment variables
SHELL=/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin
PYTHONPATH=/path/to/acquire/backend

# Email settings for alerts
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=geocoding@your-company.com
SMTP_PASSWORD=your-secure-password
FROM_EMAIL=geocoding@your-company.com

# Run basic property geocoding hourly
0 * * * * cd /path/to/your/project && python3 backend/app/workers/scheduled_geocoding.py --mode=fix_missing --limit=100 >> /var/log/geocoding/hourly.log 2>&1

# Run suspicious coordinates repair every 6 hours
0 */6 * * * cd /path/to/your/project && python3 backend/app/workers/scheduled_geocoding.py --mode=repair_suspicious --limit=50 >> /var/log/geocoding/suspicious.log 2>&1

# Run geocoding quality monitoring daily at 7 AM
0 7 * * * cd /path/to/your/project && python3 backend/app/workers/geocoding_monitor.py --sample-size=150 --email="admin@your-company.com" >> /var/log/geocoding/monitoring.log 2>&1

# Generate weekly geocoding quality report on Mondays at 8 AM
0 8 * * 1 cd /path/to/your/project && python3 backend/app/workers/geocoding_monitor.py --generate-report --output="weekly_geocoding_report.json" >> /var/log/geocoding/weekly_report.log 2>&1

# Generate geocoding visualization charts weekly on Mondays at 8:30 AM
30 8 * * 1 cd /path/to/your/project && python3 backend/scripts/visualize_geocoding_metrics.py --days=30 --output-dir="/var/www/html/geocoding-metrics" >> /var/log/geocoding/visualizations.log 2>&1

# Run missing information detector weekly on Tuesdays at 9 AM
0 9 * * 2 cd /path/to/your/project && python3 backend/app/workers/missing_info_detector.py --weekly-scan --limit=500 --output="/var/www/html/property-reports/weekly_missing_info.json" >> /var/log/property/missing_info_weekly.log 2>&1

# Send missing information email requests to brokers on Wednesdays at 10 AM
0 10 * * 3 cd /path/to/your/project && python3 backend/app/workers/missing_info_detector.py --weekly-scan --limit=500 --send-emails --output="/var/www/html/property-reports/email_requests.json" >> /var/log/property/missing_info_emails.log 2>&1

# Fix duplicate research entries daily at 3 AM
0 3 * * * cd /path/to/your/project && python3 backend/scripts/run_geocode_batch.py --fix-duplicates --limit=100 >> /var/log/geocoding/fix_duplicates.log 2>&1

# Validate geocoding accuracy weekly on Saturdays at 1 AM
0 1 * * 6 cd /path/to/your/project && python3 backend/tests/geocoding/test_geocoding_validation.py --run-validation --save-to-db >> /var/log/geocoding/validation.log 2>&1

# Comprehensive geocode all properties weekly on Sundays at 2 AM
0 2 * * 0 cd /path/to/your/project && python3 backend/app/workers/scheduled_geocoding.py --mode=refresh_all --limit=1000 >> /var/log/geocoding/weekly_refresh.log 2>&1

# Monthly full geocoding maintenance on the 1st at 3 AM
0 3 1 * * cd /path/to/your/project && python3 backend/app/workers/scheduled_geocoding.py --mode=full_maintenance >> /var/log/geocoding/monthly.log 2>&1 